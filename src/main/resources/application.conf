akka {
  extensions = [
    akka.persistence.Persistence,
    "com.romix.akka.serialization.kryo.KryoSerializationExtension$"]

  actor {
    provider = akka.cluster.ClusterActorRefProvider

    serializers {
      kryo =  "com.romix.akka.serialization.kryo.KryoSerializer"
    }

    serialization-bindings {
      "org.akkacqrs.IssueTrackerAggregate$IssueCreated" = kryo
      "org.akkacqrs.IssueTrackerAggregate$IssueClosed" = kryo
      "org.akkacqrs.IssueTrackerAggregate$IssueDeleted" = kryo
      "org.akkacqrs.IssueTrackerAggregate$IssueCreated" = kryo
      "org.akkacqrs.IssueTrackerAggregate$IssueDescriptionUpdated" = kryo
      "akka.persistence.serialization.Snapshot" = kryo
      "akka.persistence.SnapshotMetadata" = kryo
    }

    kryo {
      type = "nograph"
      idstrategy = "incremental"
      kryo-reference-map = false
      buffer-size = 65536
      post-serialization-transformations = "lz4,aes"
      encryption {
        aes {
          mode = "AES/CBC/PKCS5Padding"
          key = j68KkRjq21ykRGAQ
        }
      }
      implicit-registration-logging = true
      mappings {
        "org.akkacqrs.IssueTrackerAggregate$IssueCreated" = 50
        "org.akkacqrs.IssueTrackerAggregate$IssueClosed" = 51
        "org.akkacqrs.IssueTrackerAggregate$IssueDeleted" = 52
        "org.akkacqrs.IssueTrackerAggregate$IssueCreated" = 53
        "org.akkacqrs.IssueTrackerAggregate$IssueDescriptionUpdated" = 54
        "akka.persistence.serialization.Snapshot" = 108
        "akka.persistence.SnapshotMetadata" = 113
      }
    }

  }

  cluster {
    pub-sub {
      name = "pub-sub-mediator"
    }
  }

  persistence {
    journal {
      auto-start-journals = [""]
      plugin              = cassandra-journal
    }

    snapshot-store {
      plugin = cassandra-snapshot-store
    }
  }
}

cassandra-journal {
  event-adapters {
    issue-tracker-tag = "org.akkacqrs.IssueTrackerTaggingEventAdapter"
  }
  event-adapter-bindings {
    "org.akkacqrs.IssueTrackerAggregate$IssueCreated"            = issue-tracker-tag
    "org.akkacqrs.IssueTrackerAggregate$IssueDescriptionUpdated" = issue-tracker-tag
    "org.akkacqrs.IssueTrackerAggregate$IssueClosed"             = issue-tracker-tag
    "org.akkacqrs.IssueTrackerAggregate$IssueDeleted"            = issue-tracker-tag
  }
}

cassandra-query-journal {
  refresh-interval           = 2s
  eventual-consistency-delay = 2s
}

cassandra.read {
  contact-points = ["localhost"]
  port           = 9042
  keyspace       = "issue_tracker"
  keyspace-replication {
    class              = "SimpleStrategy"
    replication-factor = 3
  }
}

http {
  host              = "0.0.0.0"
  port              = 8000
  request-timeout   = 3 seconds
  event-buffer-size = 100
}