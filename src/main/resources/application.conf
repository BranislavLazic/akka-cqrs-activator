akka {
  extensions = [
    akka.persistence.Persistence,
    "com.romix.akka.serialization.kryo.KryoSerializationExtension$"]

  actor {
    provider = akka.cluster.ClusterActorRefProvider

    serializers {
      kryo =  "com.romix.akka.serialization.kryo.KryoSerializer"
    }

    serialization-bindings {
      "org.akkacqrs.IssueRepository$IssueCreated"       = kryo
      "org.akkacqrs.IssueRepository$IssueClosed"        = kryo
      "org.akkacqrs.IssueRepository$IssueDeleted"       = kryo
      "org.akkacqrs.IssueRepository$IssueUpdated"       = kryo
      "org.akkacqrs.IssueRepository$IssueOpenedStatus$" = kryo
      "org.akkacqrs.IssueRepository$IssueClosedStatus$" = kryo
      "akka.persistence.serialization.Snapshot"         = kryo
      "akka.persistence.SnapshotMetadata"               = kryo
    }

    kryo {
      type                               = "nograph"
      idstrategy                         = "incremental"
      kryo-reference-map                 = false
      buffer-size                        = 65536
      post-serialization-transformations = "lz4,aes"
      encryption {
        aes {
          mode = "AES/CBC/PKCS5Padding"
          key  = j68KkRjq21ykRGAQ
        }
      }
      implicit-registration-logging = true
      mappings {
        "org.akkacqrs.IssueRepository$IssueCreated"       = 50
        "org.akkacqrs.IssueRepository$IssueClosed"        = 51
        "org.akkacqrs.IssueRepository$IssueDeleted"       = 52
        "org.akkacqrs.IssueRepository$IssueUpdated"       = 53
        "org.akkacqrs.IssueRepository$IssueOpenedStatus$" = 54
        "org.akkacqrs.IssueRepository$IssueClosedStatus$" = 55
        "akka.persistence.serialization.Snapshot"         = 108
        "akka.persistence.SnapshotMetadata"               = 113
      }
    }

  }

  cluster {
    pub-sub {
      name = "pub-sub-mediator"
    }
  }

  persistence {
    journal {
      auto-start-journals = [""]
      plugin              = cassandra-journal
    }

    snapshot-store {
      plugin = cassandra-snapshot-store
    }
  }
}

cassandra-journal {
  event-adapters {
    issue-tag = "org.akkacqrs.IssueTaggingEventAdapter"
  }
  event-adapter-bindings {
    "org.akkacqrs.IssueRepository$IssueCreated" = issue-tag
    "org.akkacqrs.IssueRepository$IssueUpdated" = issue-tag
    "org.akkacqrs.IssueRepository$IssueClosed"  = issue-tag
    "org.akkacqrs.IssueRepository$IssueDeleted" = issue-tag
  }
}

cassandra-query-journal {
  refresh-interval           = 250 ms
  eventual-consistency-delay = 250 ms
}

cassandra.read {
  contact-points = ["localhost"]
  port           = 9042
  keyspace       = "issue_tracker"
}

http {
  host               = "0.0.0.0"
  port               = 8000
  request-timeout    = 3 seconds
  event-buffer-size  = 100
  heartbeat-interval = 15 seconds
}